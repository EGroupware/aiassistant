"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var lit_1 = require("lit");
exports.default = lit_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n\t:host {\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\tmin-width: var(--sl-input-height-medium);\n\t}\n\n\t:host .toolbar {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: nowrap;\n\t\toverflow: hidden;\n\t\talign-items: center;\n\n\t\t.toolbar-buttons {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\t\t\tflex-wrap: nowrap;\n\t\t\talign-items: center;\n\t\t\toverflow: hidden;\n\t\t\tposition: relative;\n\t\t\tflex: 1 1 100%;\n\t\t}\n\t\t.toolbar-list-trigger {\n\t\t\tfont-size: var(--sl-font-size-large);\n\t\t\t&::part(base) {\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t}\n\n\t\t.toolbar-list {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\n\t\t\t/* Internal components in list */\n\t\t\t& > * {\n\t\t\t\torder: attr(data-order type(<number>), 99);\n\t\t\t\tmax-width: 100%;\n\t\t\t\t&::part(base) {\n\t\t\t\t\tborder-width: 0;\n\t\t\t\t\tpadding: 0 var(--sl-spacing-large);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* Anything put into the toolbar can flex */\n\n\t\t::slotted(*) {\n\t\t\tflex: 1 1 auto;\n\t\t\torder: attr(data-order type(<number>), 99);\n\t\t\tmin-width: fit-content;\n\t\t}\n\n\t\t::slotted([slot='list']) {\n\t\t\tmax-width: 100%;\n\t\t}\n\n\t\t/* We don't want these to expand */\n\n\t\t::slotted(sl-button-group), ::slotted(et2-button), ::slotted(et2-button-icon), ::slotted(et2-button-toggle), ::slotted(et2-switch), ::slotted(et2-checkbox) {\n\t\t\tflex: 0 0 fit-content;\n\t\t\tmin-width: var(--sl-input-height-medium);\n\t\t}\n\t\t::slotted(sl-button-group)::part(base) {\n\t\t\theight: 100%;\n\t\t}\n\t\t::slotted(sl-button-group) {\n\t\t\tpadding-left: var(--sl-spacing-3x-small);\n\t\t\tpadding-right: var(--sl-spacing-3x-small);\n\t\t\tbackground: linear-gradient(var(--sl-panel-border-color) 0 0) left / var(--sl-panel-border-width, 2px) 50%;\n\t\t\tbackground-repeat: no-repeat;\n\t\t}\n\t\t::slotted(sl-button-group:first-child) {\n\t\t\tbackground: none;\n\t\t}\n\t\t/* Hide empty button groups (the buttons are in the list) */\n\n\t\t::slotted(sl-button-group:empty) {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n"], ["\n\t:host {\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\tmin-width: var(--sl-input-height-medium);\n\t}\n\n\t:host .toolbar {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: nowrap;\n\t\toverflow: hidden;\n\t\talign-items: center;\n\n\t\t.toolbar-buttons {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\t\t\tflex-wrap: nowrap;\n\t\t\talign-items: center;\n\t\t\toverflow: hidden;\n\t\t\tposition: relative;\n\t\t\tflex: 1 1 100%;\n\t\t}\n\t\t.toolbar-list-trigger {\n\t\t\tfont-size: var(--sl-font-size-large);\n\t\t\t&::part(base) {\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t}\n\n\t\t.toolbar-list {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\n\t\t\t/* Internal components in list */\n\t\t\t& > * {\n\t\t\t\torder: attr(data-order type(<number>), 99);\n\t\t\t\tmax-width: 100%;\n\t\t\t\t&::part(base) {\n\t\t\t\t\tborder-width: 0;\n\t\t\t\t\tpadding: 0 var(--sl-spacing-large);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* Anything put into the toolbar can flex */\n\n\t\t::slotted(*) {\n\t\t\tflex: 1 1 auto;\n\t\t\torder: attr(data-order type(<number>), 99);\n\t\t\tmin-width: fit-content;\n\t\t}\n\n\t\t::slotted([slot='list']) {\n\t\t\tmax-width: 100%;\n\t\t}\n\n\t\t/* We don't want these to expand */\n\n\t\t::slotted(sl-button-group), ::slotted(et2-button), ::slotted(et2-button-icon), ::slotted(et2-button-toggle), ::slotted(et2-switch), ::slotted(et2-checkbox) {\n\t\t\tflex: 0 0 fit-content;\n\t\t\tmin-width: var(--sl-input-height-medium);\n\t\t}\n\t\t::slotted(sl-button-group)::part(base) {\n\t\t\theight: 100%;\n\t\t}\n\t\t::slotted(sl-button-group) {\n\t\t\tpadding-left: var(--sl-spacing-3x-small);\n\t\t\tpadding-right: var(--sl-spacing-3x-small);\n\t\t\tbackground: linear-gradient(var(--sl-panel-border-color) 0 0) left / var(--sl-panel-border-width, 2px) 50%;\n\t\t\tbackground-repeat: no-repeat;\n\t\t}\n\t\t::slotted(sl-button-group:first-child) {\n\t\t\tbackground: none;\n\t\t}\n\t\t/* Hide empty button groups (the buttons are in the list) */\n\n\t\t::slotted(sl-button-group:empty) {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n"])));
var templateObject_1;
