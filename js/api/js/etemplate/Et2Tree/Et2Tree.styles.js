"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var lit_1 = require("lit");
//this is inside the sl tree set as the color of a selected item
//background-color: var(--sl-color-neutral-100);
//         border-inline-start-color: var(--sl-color-primary-600);
exports.default = lit_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n\t:host {\n        --sl-color-primary-600:rgb(0, 124, 255);/*This is nextmatch selected color but with no transparency or white*/\n        --sl-color-neutral-100:rgba(153, 204, 255, 0.7);/*This is nextmatch selected color*/\n\t\t--sl-spacing-large: 1rem;\n\t\tdisplay: block;\n\t}\n\n/* Style expand and collapse buttons so we can use technically larger images to increase clickable surface*/\n\t::part(expand-button) {\n\t\trotate: none;\n\t\tpadding: 0 var(--sl-spacing-small);\n        width: 5em;\n        height: 1.2em;\n        margin-left: -2.4em;\n        margin-right: calc(-2em + 10px);\n\t}\n\n    sl-icon[slot='collapse-icon'],sl-icon[slot='expand-icon']{\n        width: inherit;\n        height: inherit;\n    }\n\n\t/* Stop icon from shrinking if there's not enough space */\n\t/* increase font size by 2px this was previously done in pixelegg css but document css can not reach shadow root*/\n\n\tsl-tree-item et2-image {\n\t\tflex: 0 0 1em;\n\t\tfont-size: calc(100% + 2px);\n\t\tline-height: calc(100% - 2px);\n\t\tpadding-right: .4em;\n\t\twidth: 1em;\n\t\theight: 1em;\n\t\tdisplay: inline-block;\n\t}\n\n\t::part(label) {\n\t\toverflow: hidden;\n\t\tflex: 1 1 auto;\n\t}\n\n\t::part(label):hover {\n\t\ttext-decoration: underline;\n\t}\n\n\t.tree-item__label {\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\tsl-tree-item.drop-hover {\n\t\tbackground-color: var(--highlight-background-color);\n\t}\n\n\tsl-tree-item.drop-hover > *:not(sl-tree-item) {\n\t\tpointer-events: none;\n\t}\n\n\t/*Mail specific style TODO move it out of the component*/\n\n\tsl-tree-item.unread > .tree-item__label {\n\t\tfont-weight: bold;\n\t}\n\tsl-tree-item[selected] > .tree-item__label {\n\t\tfont-weight: bold;\n\t}\n\n\tsl-tree-item.mailAccount > .tree-item__label {\n\t\tfont-weight: bold;\n\t}\n\n\tsl-tree > sl-tree-item:nth-of-type(n+2) {\n\t\tmargin-top: 2px;\n\t}\n\n\t/* End Mail specific style*/\n\n\tsl-tree-item.drop-hover sl-tree-item {\n\t\tbackground-color: var(--sl-color-neutral-0);\n\t}\n\n\tsl-tree-item[unselectable]::part(item) {\n\t\toutline: none;\n\t\topacity: 0.5;\n\t}\n\n\t/*TODO color of selected marker in front should be #006699 same as border top color*/\n\n\tsl-badge::part(base) {\n\n\t\tbackground-color: var(--badge-color); /* This is the same color as app color mail */\n\t\tfont-size: 1em;\n\t\tfont-weight: 900;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0.5em;\n\t\tline-height: 60%;\n\t}\n\n\n\t@media only screen and (max-device-width: 768px) {\n\t\t:host {\n\t\t\t--sl-font-size-medium: 1.2rem;\n\t\t}\n\n\t\tsl-tree-item {\n\t\t\tpadding: 0.1em;\n\t\t}\n\n\n\t}\n"], ["\n\t:host {\n        --sl-color-primary-600:rgb(0, 124, 255);/*This is nextmatch selected color but with no transparency or white*/\n        --sl-color-neutral-100:rgba(153, 204, 255, 0.7);/*This is nextmatch selected color*/\n\t\t--sl-spacing-large: 1rem;\n\t\tdisplay: block;\n\t}\n\n/* Style expand and collapse buttons so we can use technically larger images to increase clickable surface*/\n\t::part(expand-button) {\n\t\trotate: none;\n\t\tpadding: 0 var(--sl-spacing-small);\n        width: 5em;\n        height: 1.2em;\n        margin-left: -2.4em;\n        margin-right: calc(-2em + 10px);\n\t}\n\n    sl-icon[slot='collapse-icon'],sl-icon[slot='expand-icon']{\n        width: inherit;\n        height: inherit;\n    }\n\n\t/* Stop icon from shrinking if there's not enough space */\n\t/* increase font size by 2px this was previously done in pixelegg css but document css can not reach shadow root*/\n\n\tsl-tree-item et2-image {\n\t\tflex: 0 0 1em;\n\t\tfont-size: calc(100% + 2px);\n\t\tline-height: calc(100% - 2px);\n\t\tpadding-right: .4em;\n\t\twidth: 1em;\n\t\theight: 1em;\n\t\tdisplay: inline-block;\n\t}\n\n\t::part(label) {\n\t\toverflow: hidden;\n\t\tflex: 1 1 auto;\n\t}\n\n\t::part(label):hover {\n\t\ttext-decoration: underline;\n\t}\n\n\t.tree-item__label {\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\tsl-tree-item.drop-hover {\n\t\tbackground-color: var(--highlight-background-color);\n\t}\n\n\tsl-tree-item.drop-hover > *:not(sl-tree-item) {\n\t\tpointer-events: none;\n\t}\n\n\t/*Mail specific style TODO move it out of the component*/\n\n\tsl-tree-item.unread > .tree-item__label {\n\t\tfont-weight: bold;\n\t}\n\tsl-tree-item[selected] > .tree-item__label {\n\t\tfont-weight: bold;\n\t}\n\n\tsl-tree-item.mailAccount > .tree-item__label {\n\t\tfont-weight: bold;\n\t}\n\n\tsl-tree > sl-tree-item:nth-of-type(n+2) {\n\t\tmargin-top: 2px;\n\t}\n\n\t/* End Mail specific style*/\n\n\tsl-tree-item.drop-hover sl-tree-item {\n\t\tbackground-color: var(--sl-color-neutral-0);\n\t}\n\n\tsl-tree-item[unselectable]::part(item) {\n\t\toutline: none;\n\t\topacity: 0.5;\n\t}\n\n\t/*TODO color of selected marker in front should be #006699 same as border top color*/\n\n\tsl-badge::part(base) {\n\n\t\tbackground-color: var(--badge-color); /* This is the same color as app color mail */\n\t\tfont-size: 1em;\n\t\tfont-weight: 900;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0.5em;\n\t\tline-height: 60%;\n\t}\n\n\n\t@media only screen and (max-device-width: 768px) {\n\t\t:host {\n\t\t\t--sl-font-size-medium: 1.2rem;\n\t\t}\n\n\t\tsl-tree-item {\n\t\t\tpadding: 0.1em;\n\t\t}\n\n\n\t}\n"])));
var templateObject_1;
